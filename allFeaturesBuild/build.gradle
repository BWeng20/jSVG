/**
 * Build Script for variant with all features turned on.
 * The source needs to be re-compiled with different flags for each variant.
 * The compile-time flags are defined in interface "SVGConverterFlags" which is generated from a template.
 * The template is configured with "SVGConverterConfig" below.
 */

plugins {
    id 'java'
}

group = project.getRootProject().group
version= project.getRootProject().version

ext.'SVGConverterConfig' =
        [
                'NamespaceAware' : true,
                'RequiredFeaturesEnabled' : true,
                'RequiredExtensionsEnabled': true,
                'SystemLanguageEnabled': true,
                'SwitchEnabled': true
        ]

repositories {
    mavenCentral()
}

processResources {
    duplicatesStrategy = 'exclude'
}

dependencies {
    compileOnly libs.openide.util
    testImplementation libs.junit.api
    testRuntimeOnly libs.junit.engine
}

sourceSets {
    main {
        java {
            srcDirs( '../src/main/java', configureGenDir )
        }
        resources {
            srcDirs( '../src/main/resources' )
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'A minimalistic SVG renderer (full features)',
                'Implementation-Version': project.version,
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Main-Class': 'com.bw.jtools.svg.SVGConverter'
    }
    archiveBaseName = 'jSVG'
    archiveClassifier = 'allFeatures'
    includeEmptyDirs = false

    from "${rootProject.projectDir}/LICENSE"
    from "${rootProject.projectDir}/README.md"
    exclude('com/bw/jtools/examples')
    exclude('com/bw/jtools/SVGIcon.svg')
}
