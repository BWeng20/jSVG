group = "io.github.bweng20"
version="1.5"

subprojects {
    apply plugin: 'java'
    java {
        modularity.inferModulePath = true
        sourceCompatibility = JavaVersion.VERSION_1_9
        targetCompatibility = JavaVersion.VERSION_1_9
    }

    repositories {
        mavenCentral()
    }

    println "Configure $project.name, Gradle version $project.gradle.gradleVersion"

    project.ext.'configureGenDir' = layout.buildDirectory.dir('generated/sources/configuration').get()

    // Create the interface SVGConverterFlags that contains boolean flags to control
    // compile-time features.
    tasks.register('generateFlagsClass', Copy) {
        println "Create SVGConverterConfig for " + project
        println " at ${project.configureGenDir}"
        println " with ${project.SVGConverterConfig}"

        from("${rootProject.rootDir}/src/main/templates/") {
            include 'SVGConverterFlags.template'
        }
        into project.layout.buildDirectory.dir('generated/sources/configuration/com/bw/jtools/svg')
        expand(['Config': project.SVGConverterConfig])
        rename {
            file -> "SVGConverterFlags.java"
        }
    }

    afterEvaluate {
        if ( project.hasProperty('SVGConverterConfig')) {
            tasks.findByName(sourceSets.main.compileJavaTaskName).dependsOn(tasks.generateFlagsClass)

            tasks.withType(Test).configureEach {
                useJUnitPlatform()
            }
        }
    }
}